/*
DO NOT EDIT - Generated by main.js. Refer to the README for more info.
*/

import { TerraformProvider } from "cdktf";
import { Construct } from "constructs";

export interface SnowflakeProviderConfig {
    readonly username?: string;
    readonly account?: string;
    readonly region?: string;
    readonly password?: string;
    readonly oauth_access_token?: string;
    readonly private_key_path?: string;
    readonly private_key?: string;
    readonly private_key_passphrase?: string;
    readonly role?: string;
}

export class SnowflakeProvider extends TerraformProvider {
    readonly _username?: string;
    readonly _account?: string;
    readonly _region?: string;
    readonly _password?: string;
    readonly _oauth_access_token?: string;
    readonly _private_key_path?: string;
    readonly _private_key?: string;
    readonly _private_key_passphrase?: string;
    readonly _role?: string;

    public constructor(scope: Construct, id: string, config: SnowflakeProviderConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake",
            terraformGeneratorMetadata: {
                providerName: "snowflake",
                providerVersionConstraint: "PROVIDER_VERSION_PLACEHOLDER"
            },
            terraformProviderSource: "terraform-cdk-provider-snowflake"
        })
    }
}