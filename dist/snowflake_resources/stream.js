"use strict";
/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Stream = void 0;
const cdktf_1 = require("cdktf");
class Stream extends cdktf_1.TerraformResource {
    _database;
    _name;
    _schema;
    _append_only;
    _comment;
    _insert_only;
    _on_stage;
    _on_table;
    _on_view;
    _show_initial_rows;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_stream",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._database = config.database;
        this._name = config.name;
        this._schema = config.schema;
        this._append_only = config.append_only;
        this._comment = config.comment;
        this._insert_only = config.insert_only;
        this._on_stage = config.on_stage;
        this._on_table = config.on_table;
        this._on_view = config.on_view;
        this._show_initial_rows = config.show_initial_rows;
    }
    getAttributes() {
        return {
            database: this._database,
            name: this._name,
            schema: this._schema,
            append_only: this._append_only,
            comment: this._comment,
            insert_only: this._insert_only,
            on_stage: this._on_stage,
            on_table: this._on_table,
            on_view: this._on_view,
            show_initial_rows: this._show_initial_rows,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_stream.${this.friendlyUniqueId}.${attribute}}`;
    }
    get database() {
        return this._database;
    }
    set database(value) {
        this._database = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get schema() {
        return this._schema;
    }
    set schema(value) {
        this._schema = value;
    }
    get append_only() {
        return this._append_only;
    }
    set append_only(value) {
        this._append_only = value;
    }
    get comment() {
        return this._comment;
    }
    set comment(value) {
        this._comment = value;
    }
    get insert_only() {
        return this._insert_only;
    }
    set insert_only(value) {
        this._insert_only = value;
    }
    get on_stage() {
        return this._on_stage;
    }
    set on_stage(value) {
        this._on_stage = value;
    }
    get on_table() {
        return this._on_table;
    }
    set on_table(value) {
        this._on_table = value;
    }
    get on_view() {
        return this._on_view;
    }
    set on_view(value) {
        this._on_view = value;
    }
    get show_initial_rows() {
        return this._show_initial_rows;
    }
    set show_initial_rows(value) {
        this._show_initial_rows = value;
    }
}
exports.Stream = Stream;
