"use strict";
/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Masking_Policy = void 0;
const cdktf_1 = require("cdktf");
class Masking_Policy extends cdktf_1.TerraformResource {
    _database;
    _masking_expression;
    _name;
    _return_data_type;
    _schema;
    _signature;
    _comment;
    _exempt_other_policies;
    _if_not_exists;
    _or_replace;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_masking_policy",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._database = config.database;
        this._masking_expression = config.masking_expression;
        this._name = config.name;
        this._return_data_type = config.return_data_type;
        this._schema = config.schema;
        this._signature = config.signature;
        this._comment = config.comment;
        this._exempt_other_policies = config.exempt_other_policies;
        this._if_not_exists = config.if_not_exists;
        this._or_replace = config.or_replace;
    }
    getAttributes() {
        return {
            database: this._database,
            masking_expression: this._masking_expression,
            name: this._name,
            return_data_type: this._return_data_type,
            schema: this._schema,
            signature: this._signature,
            comment: this._comment,
            exempt_other_policies: this._exempt_other_policies,
            if_not_exists: this._if_not_exists,
            or_replace: this._or_replace,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_masking_policy.${this.friendlyUniqueId}.${attribute}}`;
    }
    get database() {
        return this._database;
    }
    set database(value) {
        this._database = value;
    }
    get masking_expression() {
        return this._masking_expression;
    }
    set masking_expression(value) {
        this._masking_expression = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get return_data_type() {
        return this._return_data_type;
    }
    set return_data_type(value) {
        this._return_data_type = value;
    }
    get schema() {
        return this._schema;
    }
    set schema(value) {
        this._schema = value;
    }
    get signature() {
        return this._signature;
    }
    set signature(value) {
        this._signature = value;
    }
    get comment() {
        return this._comment;
    }
    set comment(value) {
        this._comment = value;
    }
    get exempt_other_policies() {
        return this._exempt_other_policies;
    }
    set exempt_other_policies(value) {
        this._exempt_other_policies = value;
    }
    get if_not_exists() {
        return this._if_not_exists;
    }
    set if_not_exists(value) {
        this._if_not_exists = value;
    }
    get or_replace() {
        return this._or_replace;
    }
    set or_replace(value) {
        this._or_replace = value;
    }
}
exports.Masking_Policy = Masking_Policy;
