"use strict";
/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Database = void 0;
const cdktf_1 = require("cdktf");
class Database extends cdktf_1.TerraformResource {
    _name;
    _comment;
    _data_retention_time_in_days;
    _from_database;
    _from_replica;
    _from_share;
    _is_transient;
    _replication_configuration;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_database",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._name = config.name;
        this._comment = config.comment;
        this._data_retention_time_in_days = config.data_retention_time_in_days;
        this._from_database = config.from_database;
        this._from_replica = config.from_replica;
        this._from_share = config.from_share;
        this._is_transient = config.is_transient;
        this._replication_configuration = config.replication_configuration;
    }
    getAttributes() {
        return {
            name: this._name,
            comment: this._comment,
            data_retention_time_in_days: this._data_retention_time_in_days,
            from_database: this._from_database,
            from_replica: this._from_replica,
            from_share: this._from_share,
            is_transient: this._is_transient,
            replication_configuration: this._replication_configuration,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_database.${this.friendlyUniqueId}.${attribute}}`;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get comment() {
        return this._comment;
    }
    set comment(value) {
        this._comment = value;
    }
    get data_retention_time_in_days() {
        return this._data_retention_time_in_days;
    }
    set data_retention_time_in_days(value) {
        this._data_retention_time_in_days = value;
    }
    get from_database() {
        return this._from_database;
    }
    set from_database(value) {
        this._from_database = value;
    }
    get from_replica() {
        return this._from_replica;
    }
    set from_replica(value) {
        this._from_replica = value;
    }
    get from_share() {
        return this._from_share;
    }
    set from_share(value) {
        this._from_share = value;
    }
    get is_transient() {
        return this._is_transient;
    }
    set is_transient(value) {
        this._is_transient = value;
    }
    get replication_configuration() {
        return this._replication_configuration;
    }
    set replication_configuration(value) {
        this._replication_configuration = value;
    }
}
exports.Database = Database;
