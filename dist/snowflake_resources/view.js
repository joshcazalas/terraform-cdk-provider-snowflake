"use strict";
/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.View = void 0;
const cdktf_1 = require("cdktf");
class View extends cdktf_1.TerraformResource {
    _database;
    _name;
    _schema;
    _statement;
    _comment;
    _copy_grants;
    _is_secure;
    _or_replace;
    _tag;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_view",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._database = config.database;
        this._name = config.name;
        this._schema = config.schema;
        this._statement = config.statement;
        this._comment = config.comment;
        this._copy_grants = config.copy_grants;
        this._is_secure = config.is_secure;
        this._or_replace = config.or_replace;
        this._tag = config.tag;
    }
    getAttributes() {
        return {
            database: this._database,
            name: this._name,
            schema: this._schema,
            statement: this._statement,
            comment: this._comment,
            copy_grants: this._copy_grants,
            is_secure: this._is_secure,
            or_replace: this._or_replace,
            tag: this._tag,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_view.${this.friendlyUniqueId}.${attribute}}`;
    }
    get database() {
        return this._database;
    }
    set database(value) {
        this._database = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get schema() {
        return this._schema;
    }
    set schema(value) {
        this._schema = value;
    }
    get statement() {
        return this._statement;
    }
    set statement(value) {
        this._statement = value;
    }
    get comment() {
        return this._comment;
    }
    set comment(value) {
        this._comment = value;
    }
    get copy_grants() {
        return this._copy_grants;
    }
    set copy_grants(value) {
        this._copy_grants = value;
    }
    get is_secure() {
        return this._is_secure;
    }
    set is_secure(value) {
        this._is_secure = value;
    }
    get or_replace() {
        return this._or_replace;
    }
    set or_replace(value) {
        this._or_replace = value;
    }
    get tag() {
        return this._tag;
    }
    set tag(value) {
        this._tag = value;
    }
}
exports.View = View;
