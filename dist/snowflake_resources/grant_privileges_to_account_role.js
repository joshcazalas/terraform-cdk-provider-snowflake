"use strict";
/*
DO NOT EDIT - Generated by main.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Grant_Privileges_To_Account_Role = void 0;
const cdktf_1 = require("cdktf");
class Grant_Privileges_To_Account_Role extends cdktf_1.TerraformResource {
    _account_role_name;
    _all_privileges;
    _always_apply;
    _always_apply_trigger;
    _on_account;
    _on_account_object;
    _on_schema;
    _on_schema_object;
    _privileges;
    _with_grant_option;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_grant_privileges_to_account_role",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._account_role_name = config.account_role_name;
        this._all_privileges = config.all_privileges;
        this._always_apply = config.always_apply;
        this._always_apply_trigger = config.always_apply_trigger;
        this._on_account = config.on_account;
        this._on_account_object = config.on_account_object;
        this._on_schema = config.on_schema;
        this._on_schema_object = config.on_schema_object;
        this._privileges = config.privileges;
        this._with_grant_option = config.with_grant_option;
    }
    getAttributes() {
        return {
            account_role_name: this._account_role_name,
            all_privileges: this._all_privileges,
            always_apply: this._always_apply,
            always_apply_trigger: this._always_apply_trigger,
            on_account: this._on_account,
            on_account_object: this._on_account_object,
            on_schema: this._on_schema,
            on_schema_object: this._on_schema_object,
            privileges: this._privileges,
            with_grant_option: this._with_grant_option,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_grant_privileges_to_account_role.${this.friendlyUniqueId}.${attribute}}`;
    }
    get account_role_name() {
        return this._account_role_name;
    }
    set account_role_name(value) {
        this._account_role_name = value;
    }
    get all_privileges() {
        return this._all_privileges;
    }
    set all_privileges(value) {
        this._all_privileges = value;
    }
    get always_apply() {
        return this._always_apply;
    }
    set always_apply(value) {
        this._always_apply = value;
    }
    get always_apply_trigger() {
        return this._always_apply_trigger;
    }
    set always_apply_trigger(value) {
        this._always_apply_trigger = value;
    }
    get on_account() {
        return this._on_account;
    }
    set on_account(value) {
        this._on_account = value;
    }
    get on_account_object() {
        return this._on_account_object;
    }
    set on_account_object(value) {
        this._on_account_object = value;
    }
    get on_schema() {
        return this._on_schema;
    }
    set on_schema(value) {
        this._on_schema = value;
    }
    get on_schema_object() {
        return this._on_schema_object;
    }
    set on_schema_object(value) {
        this._on_schema_object = value;
    }
    get privileges() {
        return this._privileges;
    }
    set privileges(value) {
        this._privileges = value;
    }
    get with_grant_option() {
        return this._with_grant_option;
    }
    set with_grant_option(value) {
        this._with_grant_option = value;
    }
}
exports.Grant_Privileges_To_Account_Role = Grant_Privileges_To_Account_Role;
