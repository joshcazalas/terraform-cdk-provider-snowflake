"use strict";
/*
DO NOT EDIT - Generated by main.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.File_Format = void 0;
const cdktf_1 = require("cdktf");
class File_Format extends cdktf_1.TerraformResource {
    _database;
    _format_type;
    _name;
    _schema;
    _allow_duplicate;
    _binary_as_text;
    _binary_format;
    _comment;
    _compression;
    _date_format;
    _disable_auto_convert;
    _disable_snowflake_data;
    _empty_field_as_null;
    _enable_octal;
    _encoding;
    _error_on_column_count_mismatch;
    _escape;
    _escape_unenclosed_field;
    _field_delimiter;
    _field_optionally_enclosed_by;
    _file_extension;
    _ignore_utf8_errors;
    _null_if;
    _preserve_space;
    _record_delimiter;
    _replace_invalid_characters;
    _skip_blank_lines;
    _skip_byte_order_mark;
    _skip_header;
    _strip_null_values;
    _strip_outer_array;
    _strip_outer_element;
    _time_format;
    _timestamp_format;
    _trim_space;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_file_format",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._database = config.database;
        this._format_type = config.format_type;
        this._name = config.name;
        this._schema = config.schema;
        this._allow_duplicate = config.allow_duplicate;
        this._binary_as_text = config.binary_as_text;
        this._binary_format = config.binary_format;
        this._comment = config.comment;
        this._compression = config.compression;
        this._date_format = config.date_format;
        this._disable_auto_convert = config.disable_auto_convert;
        this._disable_snowflake_data = config.disable_snowflake_data;
        this._empty_field_as_null = config.empty_field_as_null;
        this._enable_octal = config.enable_octal;
        this._encoding = config.encoding;
        this._error_on_column_count_mismatch = config.error_on_column_count_mismatch;
        this._escape = config.escape;
        this._escape_unenclosed_field = config.escape_unenclosed_field;
        this._field_delimiter = config.field_delimiter;
        this._field_optionally_enclosed_by = config.field_optionally_enclosed_by;
        this._file_extension = config.file_extension;
        this._ignore_utf8_errors = config.ignore_utf8_errors;
        this._null_if = config.null_if;
        this._preserve_space = config.preserve_space;
        this._record_delimiter = config.record_delimiter;
        this._replace_invalid_characters = config.replace_invalid_characters;
        this._skip_blank_lines = config.skip_blank_lines;
        this._skip_byte_order_mark = config.skip_byte_order_mark;
        this._skip_header = config.skip_header;
        this._strip_null_values = config.strip_null_values;
        this._strip_outer_array = config.strip_outer_array;
        this._strip_outer_element = config.strip_outer_element;
        this._time_format = config.time_format;
        this._timestamp_format = config.timestamp_format;
        this._trim_space = config.trim_space;
    }
    getAttributes() {
        return {
            database: this._database,
            format_type: this._format_type,
            name: this._name,
            schema: this._schema,
            allow_duplicate: this._allow_duplicate,
            binary_as_text: this._binary_as_text,
            binary_format: this._binary_format,
            comment: this._comment,
            compression: this._compression,
            date_format: this._date_format,
            disable_auto_convert: this._disable_auto_convert,
            disable_snowflake_data: this._disable_snowflake_data,
            empty_field_as_null: this._empty_field_as_null,
            enable_octal: this._enable_octal,
            encoding: this._encoding,
            error_on_column_count_mismatch: this._error_on_column_count_mismatch,
            escape: this._escape,
            escape_unenclosed_field: this._escape_unenclosed_field,
            field_delimiter: this._field_delimiter,
            field_optionally_enclosed_by: this._field_optionally_enclosed_by,
            file_extension: this._file_extension,
            ignore_utf8_errors: this._ignore_utf8_errors,
            null_if: this._null_if,
            preserve_space: this._preserve_space,
            record_delimiter: this._record_delimiter,
            replace_invalid_characters: this._replace_invalid_characters,
            skip_blank_lines: this._skip_blank_lines,
            skip_byte_order_mark: this._skip_byte_order_mark,
            skip_header: this._skip_header,
            strip_null_values: this._strip_null_values,
            strip_outer_array: this._strip_outer_array,
            strip_outer_element: this._strip_outer_element,
            time_format: this._time_format,
            timestamp_format: this._timestamp_format,
            trim_space: this._trim_space,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_file_format.${this.friendlyUniqueId}.${attribute}}`;
    }
    get database() {
        return this._database;
    }
    set database(value) {
        this._database = value;
    }
    get format_type() {
        return this._format_type;
    }
    set format_type(value) {
        this._format_type = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get schema() {
        return this._schema;
    }
    set schema(value) {
        this._schema = value;
    }
    get allow_duplicate() {
        return this._allow_duplicate;
    }
    set allow_duplicate(value) {
        this._allow_duplicate = value;
    }
    get binary_as_text() {
        return this._binary_as_text;
    }
    set binary_as_text(value) {
        this._binary_as_text = value;
    }
    get binary_format() {
        return this._binary_format;
    }
    set binary_format(value) {
        this._binary_format = value;
    }
    get comment() {
        return this._comment;
    }
    set comment(value) {
        this._comment = value;
    }
    get compression() {
        return this._compression;
    }
    set compression(value) {
        this._compression = value;
    }
    get date_format() {
        return this._date_format;
    }
    set date_format(value) {
        this._date_format = value;
    }
    get disable_auto_convert() {
        return this._disable_auto_convert;
    }
    set disable_auto_convert(value) {
        this._disable_auto_convert = value;
    }
    get disable_snowflake_data() {
        return this._disable_snowflake_data;
    }
    set disable_snowflake_data(value) {
        this._disable_snowflake_data = value;
    }
    get empty_field_as_null() {
        return this._empty_field_as_null;
    }
    set empty_field_as_null(value) {
        this._empty_field_as_null = value;
    }
    get enable_octal() {
        return this._enable_octal;
    }
    set enable_octal(value) {
        this._enable_octal = value;
    }
    get encoding() {
        return this._encoding;
    }
    set encoding(value) {
        this._encoding = value;
    }
    get error_on_column_count_mismatch() {
        return this._error_on_column_count_mismatch;
    }
    set error_on_column_count_mismatch(value) {
        this._error_on_column_count_mismatch = value;
    }
    get escape() {
        return this._escape;
    }
    set escape(value) {
        this._escape = value;
    }
    get escape_unenclosed_field() {
        return this._escape_unenclosed_field;
    }
    set escape_unenclosed_field(value) {
        this._escape_unenclosed_field = value;
    }
    get field_delimiter() {
        return this._field_delimiter;
    }
    set field_delimiter(value) {
        this._field_delimiter = value;
    }
    get field_optionally_enclosed_by() {
        return this._field_optionally_enclosed_by;
    }
    set field_optionally_enclosed_by(value) {
        this._field_optionally_enclosed_by = value;
    }
    get file_extension() {
        return this._file_extension;
    }
    set file_extension(value) {
        this._file_extension = value;
    }
    get ignore_utf8_errors() {
        return this._ignore_utf8_errors;
    }
    set ignore_utf8_errors(value) {
        this._ignore_utf8_errors = value;
    }
    get null_if() {
        return this._null_if;
    }
    set null_if(value) {
        this._null_if = value;
    }
    get preserve_space() {
        return this._preserve_space;
    }
    set preserve_space(value) {
        this._preserve_space = value;
    }
    get record_delimiter() {
        return this._record_delimiter;
    }
    set record_delimiter(value) {
        this._record_delimiter = value;
    }
    get replace_invalid_characters() {
        return this._replace_invalid_characters;
    }
    set replace_invalid_characters(value) {
        this._replace_invalid_characters = value;
    }
    get skip_blank_lines() {
        return this._skip_blank_lines;
    }
    set skip_blank_lines(value) {
        this._skip_blank_lines = value;
    }
    get skip_byte_order_mark() {
        return this._skip_byte_order_mark;
    }
    set skip_byte_order_mark(value) {
        this._skip_byte_order_mark = value;
    }
    get skip_header() {
        return this._skip_header;
    }
    set skip_header(value) {
        this._skip_header = value;
    }
    get strip_null_values() {
        return this._strip_null_values;
    }
    set strip_null_values(value) {
        this._strip_null_values = value;
    }
    get strip_outer_array() {
        return this._strip_outer_array;
    }
    set strip_outer_array(value) {
        this._strip_outer_array = value;
    }
    get strip_outer_element() {
        return this._strip_outer_element;
    }
    set strip_outer_element(value) {
        this._strip_outer_element = value;
    }
    get time_format() {
        return this._time_format;
    }
    set time_format(value) {
        this._time_format = value;
    }
    get timestamp_format() {
        return this._timestamp_format;
    }
    set timestamp_format(value) {
        this._timestamp_format = value;
    }
    get trim_space() {
        return this._trim_space;
    }
    set trim_space(value) {
        this._trim_space = value;
    }
}
exports.File_Format = File_Format;
