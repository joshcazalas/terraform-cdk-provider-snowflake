import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";
export interface External_Oauth_IntegrationConfig extends TerraformMetaArguments {
    enabled: boolean;
    issuer: string;
    name: string;
    snowflake_user_mapping_attribute: string;
    token_user_mapping_claims: string[];
    type: string;
    allowed_roles?: string[];
    any_role_mode?: string;
    audience_urls?: string[];
    blocked_roles?: string[];
    comment?: string;
    jws_keys_urls?: string[];
    rsa_public_key?: string;
    rsa_public_key_2?: string;
    scope_delimiter?: string;
    scope_mapping_attribute?: string;
}
export declare class External_Oauth_Integration extends TerraformResource {
    _enabled: boolean;
    _issuer: string;
    _name: string;
    _snowflake_user_mapping_attribute: string;
    _token_user_mapping_claims: string[];
    _type: string;
    _allowed_roles?: string[];
    _any_role_mode?: string;
    _audience_urls?: string[];
    _blocked_roles?: string[];
    _comment?: string;
    _jws_keys_urls?: string[];
    _rsa_public_key?: string;
    _rsa_public_key_2?: string;
    _scope_delimiter?: string;
    _scope_mapping_attribute?: string;
    readonly _id: string;
    constructor(scope: Construct, id: string, config: External_Oauth_IntegrationConfig);
    getAttributes(): {
        [name: string]: any;
    };
    get id(): string;
    ref(attribute: string): string;
    get enabled(): boolean;
    set enabled(value: boolean);
    get issuer(): string;
    set issuer(value: string);
    get name(): string;
    set name(value: string);
    get snowflake_user_mapping_attribute(): string;
    set snowflake_user_mapping_attribute(value: string);
    get token_user_mapping_claims(): string[];
    set token_user_mapping_claims(value: string[]);
    get type(): string;
    set type(value: string);
    get allowed_roles(): string[] | undefined;
    set allowed_roles(value: string[] | undefined);
    get any_role_mode(): string | undefined;
    set any_role_mode(value: string | undefined);
    get audience_urls(): string[] | undefined;
    set audience_urls(value: string[] | undefined);
    get blocked_roles(): string[] | undefined;
    set blocked_roles(value: string[] | undefined);
    get comment(): string | undefined;
    set comment(value: string | undefined);
    get jws_keys_urls(): string[] | undefined;
    set jws_keys_urls(value: string[] | undefined);
    get rsa_public_key(): string | undefined;
    set rsa_public_key(value: string | undefined);
    get rsa_public_key_2(): string | undefined;
    set rsa_public_key_2(value: string | undefined);
    get scope_delimiter(): string | undefined;
    set scope_delimiter(value: string | undefined);
    get scope_mapping_attribute(): string | undefined;
    set scope_mapping_attribute(value: string | undefined);
}
