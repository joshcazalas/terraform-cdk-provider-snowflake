"use strict";
/*
DO NOT EDIT - Generated by main.js. Refer to the README for more info.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dynamic_Table = void 0;
const cdktf_1 = require("cdktf");
class Dynamic_Table extends cdktf_1.TerraformResource {
    _database;
    _name;
    _query;
    _schema;
    _target_lag;
    _warehouse;
    _comment;
    _initialize;
    _or_replace;
    _refresh_mode;
    _id;
    constructor(scope, id, config) {
        super(scope, id, {
            terraformResourceType: "snowflake_dynamic_table",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        this._database = config.database;
        this._name = config.name;
        this._query = config.query;
        this._schema = config.schema;
        this._target_lag = config.target_lag;
        this._warehouse = config.warehouse;
        this._comment = config.comment;
        this._initialize = config.initialize;
        this._or_replace = config.or_replace;
        this._refresh_mode = config.refresh_mode;
    }
    getAttributes() {
        return {
            database: this._database,
            name: this._name,
            query: this._query,
            schema: this._schema,
            target_lag: this._target_lag,
            warehouse: this._warehouse,
            comment: this._comment,
            initialize: this._initialize,
            or_replace: this._or_replace,
            refresh_mode: this._refresh_mode,
        };
    }
    get id() {
        return this._id;
    }
    ref(attribute) {
        return `\${snowflake_dynamic_table.${this.friendlyUniqueId}.${attribute}}`;
    }
    get database() {
        return this._database;
    }
    set database(value) {
        this._database = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get query() {
        return this._query;
    }
    set query(value) {
        this._query = value;
    }
    get schema() {
        return this._schema;
    }
    set schema(value) {
        this._schema = value;
    }
    get target_lag() {
        return this._target_lag;
    }
    set target_lag(value) {
        this._target_lag = value;
    }
    get warehouse() {
        return this._warehouse;
    }
    set warehouse(value) {
        this._warehouse = value;
    }
    get comment() {
        return this._comment;
    }
    set comment(value) {
        this._comment = value;
    }
    get initialize() {
        return this._initialize;
    }
    set initialize(value) {
        this._initialize = value;
    }
    get or_replace() {
        return this._or_replace;
    }
    set or_replace(value) {
        this._or_replace = value;
    }
    get refresh_mode() {
        return this._refresh_mode;
    }
    set refresh_mode(value) {
        this._refresh_mode = value;
    }
}
exports.Dynamic_Table = Dynamic_Table;
