import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";
export interface Password_PolicyConfig extends TerraformMetaArguments {
    database: string;
    name: string;
    schema: string;
    comment?: string;
    history?: number;
    if_not_exists?: boolean;
    lockout_time_mins?: number;
    max_age_days?: number;
    max_length?: number;
    max_retries?: number;
    min_age_days?: number;
    min_length?: number;
    min_lower_case_chars?: number;
    min_numeric_chars?: number;
    min_special_chars?: number;
    min_upper_case_chars?: number;
    or_replace?: boolean;
}
export declare class Password_Policy extends TerraformResource {
    _database: string;
    _name: string;
    _schema: string;
    _comment?: string;
    _history?: number;
    _if_not_exists?: boolean;
    _lockout_time_mins?: number;
    _max_age_days?: number;
    _max_length?: number;
    _max_retries?: number;
    _min_age_days?: number;
    _min_length?: number;
    _min_lower_case_chars?: number;
    _min_numeric_chars?: number;
    _min_special_chars?: number;
    _min_upper_case_chars?: number;
    _or_replace?: boolean;
    readonly _id: string;
    constructor(scope: Construct, id: string, config: Password_PolicyConfig);
    getAttributes(): {
        [name: string]: any;
    };
    get id(): string;
    ref(attribute: string): string;
    get database(): string;
    set database(value: string);
    get name(): string;
    set name(value: string);
    get schema(): string;
    set schema(value: string);
    get comment(): string | undefined;
    set comment(value: string | undefined);
    get history(): number | undefined;
    set history(value: number | undefined);
    get if_not_exists(): boolean | undefined;
    set if_not_exists(value: boolean | undefined);
    get lockout_time_mins(): number | undefined;
    set lockout_time_mins(value: number | undefined);
    get max_age_days(): number | undefined;
    set max_age_days(value: number | undefined);
    get max_length(): number | undefined;
    set max_length(value: number | undefined);
    get max_retries(): number | undefined;
    set max_retries(value: number | undefined);
    get min_age_days(): number | undefined;
    set min_age_days(value: number | undefined);
    get min_length(): number | undefined;
    set min_length(value: number | undefined);
    get min_lower_case_chars(): number | undefined;
    set min_lower_case_chars(value: number | undefined);
    get min_numeric_chars(): number | undefined;
    set min_numeric_chars(value: number | undefined);
    get min_special_chars(): number | undefined;
    set min_special_chars(value: number | undefined);
    get min_upper_case_chars(): number | undefined;
    set min_upper_case_chars(value: number | undefined);
    get or_replace(): boolean | undefined;
    set or_replace(value: boolean | undefined);
}
