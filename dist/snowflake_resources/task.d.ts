import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";
export interface TaskConfig extends TerraformMetaArguments {
    database: string;
    name: string;
    schema: string;
    sql_statement: string;
    after?: string[];
    allow_overlapping_execution?: boolean;
    comment?: string;
    enabled?: boolean;
    error_integration?: string;
    schedule?: string;
    session_parameters?: Record<string, string>;
    user_task_managed_initial_warehouse_size?: string;
    user_task_timeout_ms?: number;
    warehouse?: string;
    when?: string;
}
export declare class Task extends TerraformResource {
    _database: string;
    _name: string;
    _schema: string;
    _sql_statement: string;
    _after?: string[];
    _allow_overlapping_execution?: boolean;
    _comment?: string;
    _enabled?: boolean;
    _error_integration?: string;
    _schedule?: string;
    _session_parameters?: Record<string, string>;
    _user_task_managed_initial_warehouse_size?: string;
    _user_task_timeout_ms?: number;
    _warehouse?: string;
    _when?: string;
    readonly _id: string;
    constructor(scope: Construct, id: string, config: TaskConfig);
    getAttributes(): {
        [name: string]: any;
    };
    get id(): string;
    ref(attribute: string): string;
    get database(): string;
    set database(value: string);
    get name(): string;
    set name(value: string);
    get schema(): string;
    set schema(value: string);
    get sql_statement(): string;
    set sql_statement(value: string);
    get after(): string[] | undefined;
    set after(value: string[] | undefined);
    get allow_overlapping_execution(): boolean | undefined;
    set allow_overlapping_execution(value: boolean | undefined);
    get comment(): string | undefined;
    set comment(value: string | undefined);
    get enabled(): boolean | undefined;
    set enabled(value: boolean | undefined);
    get error_integration(): string | undefined;
    set error_integration(value: string | undefined);
    get schedule(): string | undefined;
    set schedule(value: string | undefined);
    get session_parameters(): Record<string, string> | undefined;
    set session_parameters(value: Record<string, string> | undefined);
    get user_task_managed_initial_warehouse_size(): string | undefined;
    set user_task_managed_initial_warehouse_size(value: string | undefined);
    get user_task_timeout_ms(): number | undefined;
    set user_task_timeout_ms(value: number | undefined);
    get warehouse(): string | undefined;
    set warehouse(value: string | undefined);
    get when(): string | undefined;
    set when(value: string | undefined);
}
