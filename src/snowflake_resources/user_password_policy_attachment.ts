/*
DO NOT EDIT - Generated by main.js. Refer to the README for more info.
*/

import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";


export interface User_Password_Policy_AttachmentConfig extends TerraformMetaArguments {
    password_policy_name: string;
    user_name: string;
}

export class User_Password_Policy_Attachment extends TerraformResource {
    _password_policy_name: string;
    _user_name: string;
    readonly _id: string;

    public constructor(scope: Construct, id: string, config: User_Password_Policy_AttachmentConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake_user_password_policy_attachment",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        
        this._password_policy_name = config.password_policy_name;
        
        this._user_name = config.user_name;
    }
    public getAttributes(): { [name: string]: any } {
        return {
            password_policy_name: this._password_policy_name,
            user_name: this._user_name,
        }
    }

    public get id(): string {
        return this._id;
    }

    public ref(attribute: string): string {
        return `\${snowflake_user_password_policy_attachment.${this.friendlyUniqueId}.${attribute}}`;
    }

    public get password_policy_name(): string {
        return this._password_policy_name
    }

    public set password_policy_name(value: string) {
        this._password_policy_name = value;
    }
    
    public get user_name(): string {
        return this._user_name
    }

    public set user_name(value: string) {
        this._user_name = value;
    }
    
}

