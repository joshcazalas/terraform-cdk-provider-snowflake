/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/

import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";

export interface  {
}

export interface FunctionConfig extends TerraformMetaArguments {
    database: string;
    name: string;
    return_type: string;
    schema: string;
    statement: string;
    arguments?: Function_Arguments[];
    comment?: string;
    handler?: string;
    imports?: string[];
    is_secure?: boolean;
    language?: string;
    null_input_behavior?: string;
    packages?: string[];
    return_behavior?: string;
    runtime_version?: string;
    target_path?: string;
}

export class Function extends TerraformResource {
    _database: string;
    _name: string;
    _return_type: string;
    _schema: string;
    _statement: string;
    _arguments?: Function_Arguments[];
    _comment?: string;
    _handler?: string;
    _imports?: string[];
    _is_secure?: boolean;
    _language?: string;
    _null_input_behavior?: string;
    _packages?: string[];
    _return_behavior?: string;
    _runtime_version?: string;
    _target_path?: string;
    readonly _id: string;

    public constructor(scope: Construct, id: string, config: FunctionConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake_function",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        
        this._database = config.database;
        
        this._name = config.name;
        
        this._return_type = config.return_type;
        
        this._schema = config.schema;
        
        this._statement = config.statement;
        
        this._arguments = config.arguments;
        
        this._comment = config.comment;
        
        this._handler = config.handler;
        
        this._imports = config.imports;
        
        this._is_secure = config.is_secure;
        
        this._language = config.language;
        
        this._null_input_behavior = config.null_input_behavior;
        
        this._packages = config.packages;
        
        this._return_behavior = config.return_behavior;
        
        this._runtime_version = config.runtime_version;
        
        this._target_path = config.target_path;
    }
    public getAttributes(): { [name: string]: any } {
        return {
            database: this._database,
            name: this._name,
            return_type: this._return_type,
            schema: this._schema,
            statement: this._statement,
            arguments: this._arguments,
            comment: this._comment,
            handler: this._handler,
            imports: this._imports,
            is_secure: this._is_secure,
            language: this._language,
            null_input_behavior: this._null_input_behavior,
            packages: this._packages,
            return_behavior: this._return_behavior,
            runtime_version: this._runtime_version,
            target_path: this._target_path,
        }
    }

    public get id(): string {
        return this._id;
    }

    public ref(attribute: string): string {
        return `\${snowflake_function.${this.friendlyUniqueId}.${attribute}}`;
    }

    public get database(): string {
        return this._database
    }

    public set database(value: string) {
        this._database = value;
    }
    public get name(): string {
        return this._name
    }

    public set name(value: string) {
        this._name = value;
    }
    public get return_type(): string {
        return this._return_type
    }

    public set return_type(value: string) {
        this._return_type = value;
    }
    public get schema(): string {
        return this._schema
    }

    public set schema(value: string) {
        this._schema = value;
    }
    public get statement(): string {
        return this._statement
    }

    public set statement(value: string) {
        this._statement = value;
    }
    public get arguments(): Function_Arguments[] | undefined {
        return this._arguments
    }

    public set arguments(value: Function_Arguments[] | undefined) {
        this._arguments = value;
    }
    public get comment(): string | undefined {
        return this._comment
    }

    public set comment(value: string | undefined) {
        this._comment = value;
    }
    public get handler(): string | undefined {
        return this._handler
    }

    public set handler(value: string | undefined) {
        this._handler = value;
    }
    public get imports(): string[] | undefined {
        return this._imports
    }

    public set imports(value: string[] | undefined) {
        this._imports = value;
    }
    public get is_secure(): boolean | undefined {
        return this._is_secure
    }

    public set is_secure(value: boolean | undefined) {
        this._is_secure = value;
    }
    public get language(): string | undefined {
        return this._language
    }

    public set language(value: string | undefined) {
        this._language = value;
    }
    public get null_input_behavior(): string | undefined {
        return this._null_input_behavior
    }

    public set null_input_behavior(value: string | undefined) {
        this._null_input_behavior = value;
    }
    public get packages(): string[] | undefined {
        return this._packages
    }

    public set packages(value: string[] | undefined) {
        this._packages = value;
    }
    public get return_behavior(): string | undefined {
        return this._return_behavior
    }

    public set return_behavior(value: string | undefined) {
        this._return_behavior = value;
    }
    public get runtime_version(): string | undefined {
        return this._runtime_version
    }

    public set runtime_version(value: string | undefined) {
        this._runtime_version = value;
    }
    public get target_path(): string | undefined {
        return this._target_path
    }

    public set target_path(value: string | undefined) {
        this._target_path = value;
    }
}

