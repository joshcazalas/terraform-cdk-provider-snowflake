/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/

import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";

    export interface Materialized_View_Tag {
        readonly name: string;
        readonly value: string;
        readonly database?: string;
        readonly schema?: string;
    }

export interface Materialized_ViewConfig extends TerraformMetaArguments {
    database: string;
    name: string;
    schema: string;
    statement: string;
    warehouse: string;
    comment?: string;
    is_secure?: boolean;
    or_replace?: boolean;
    tag?: Materialized_View_Tag[];
}

export class Materialized_View extends TerraformResource {
    _database: string;
    _name: string;
    _schema: string;
    _statement: string;
    _warehouse: string;
    _comment?: string;
    _is_secure?: boolean;
    _or_replace?: boolean;
    _tag?: Materialized_View_Tag[];
    readonly _id: string;

    public constructor(scope: Construct, id: string, config: Materialized_ViewConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake_materialized_view",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        
        this._database = config.database;
        
        this._name = config.name;
        
        this._schema = config.schema;
        
        this._statement = config.statement;
        
        this._warehouse = config.warehouse;
        
        this._comment = config.comment;
        
        this._is_secure = config.is_secure;
        
        this._or_replace = config.or_replace;
        
        this._tag = config.tag;
    }
    public getAttributes(): { [name: string]: any } {
        return {
            database: this._database,
            name: this._name,
            schema: this._schema,
            statement: this._statement,
            warehouse: this._warehouse,
            comment: this._comment,
            is_secure: this._is_secure,
            or_replace: this._or_replace,
            tag: this._tag,
        }
    }

    public get id(): string {
        return this._id;
    }

    public ref(attribute: string): string {
        return `\${snowflake_materialized_view.${this.friendlyUniqueId}.${attribute}}`;
    }

    public get database(): string {
        return this._database
    }

    public set database(value: string) {
        this._database = value;
    }
    
    public get name(): string {
        return this._name
    }

    public set name(value: string) {
        this._name = value;
    }
    
    public get schema(): string {
        return this._schema
    }

    public set schema(value: string) {
        this._schema = value;
    }
    
    public get statement(): string {
        return this._statement
    }

    public set statement(value: string) {
        this._statement = value;
    }
    
    public get warehouse(): string {
        return this._warehouse
    }

    public set warehouse(value: string) {
        this._warehouse = value;
    }
    
    public get comment(): string | undefined {
        return this._comment
    }

    public set comment(value: string | undefined) {
        this._comment = value;
    }
    
    public get is_secure(): boolean | undefined {
        return this._is_secure
    }

    public set is_secure(value: boolean | undefined) {
        this._is_secure = value;
    }
    
    public get or_replace(): boolean | undefined {
        return this._or_replace
    }

    public set or_replace(value: boolean | undefined) {
        this._or_replace = value;
    }
    
    public get tag(): Materialized_View_Tag[] | undefined {
        return this._tag
    }

    public set tag(value: Materialized_View_Tag[] | undefined) {
        this._tag = value;
    }
    
}

