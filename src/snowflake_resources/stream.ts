/*
DO NOT EDIT - Generated by main.js. Refer to the README for more info.
*/

import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";


export interface StreamConfig extends TerraformMetaArguments {
    database: string;
    name: string;
    schema: string;
    append_only?: boolean;
    comment?: string;
    insert_only?: boolean;
    on_stage?: string;
    on_table?: string;
    on_view?: string;
    show_initial_rows?: boolean;
}

export class Stream extends TerraformResource {
    _database: string;
    _name: string;
    _schema: string;
    _append_only?: boolean;
    _comment?: string;
    _insert_only?: boolean;
    _on_stage?: string;
    _on_table?: string;
    _on_view?: string;
    _show_initial_rows?: boolean;
    readonly _id: string;

    public constructor(scope: Construct, id: string, config: StreamConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake_stream",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        
        this._database = config.database;
        
        this._name = config.name;
        
        this._schema = config.schema;
        
        this._append_only = config.append_only;
        
        this._comment = config.comment;
        
        this._insert_only = config.insert_only;
        
        this._on_stage = config.on_stage;
        
        this._on_table = config.on_table;
        
        this._on_view = config.on_view;
        
        this._show_initial_rows = config.show_initial_rows;
    }
    public getAttributes(): { [name: string]: any } {
        return {
            database: this._database,
            name: this._name,
            schema: this._schema,
            append_only: this._append_only,
            comment: this._comment,
            insert_only: this._insert_only,
            on_stage: this._on_stage,
            on_table: this._on_table,
            on_view: this._on_view,
            show_initial_rows: this._show_initial_rows,
        }
    }

    public get id(): string {
        return this._id;
    }

    public ref(attribute: string): string {
        return `\${snowflake_stream.${this.friendlyUniqueId}.${attribute}}`;
    }

    public get database(): string {
        return this._database
    }

    public set database(value: string) {
        this._database = value;
    }
    
    public get name(): string {
        return this._name
    }

    public set name(value: string) {
        this._name = value;
    }
    
    public get schema(): string {
        return this._schema
    }

    public set schema(value: string) {
        this._schema = value;
    }
    
    public get append_only(): boolean | undefined {
        return this._append_only
    }

    public set append_only(value: boolean | undefined) {
        this._append_only = value;
    }
    
    public get comment(): string | undefined {
        return this._comment
    }

    public set comment(value: string | undefined) {
        this._comment = value;
    }
    
    public get insert_only(): boolean | undefined {
        return this._insert_only
    }

    public set insert_only(value: boolean | undefined) {
        this._insert_only = value;
    }
    
    public get on_stage(): string | undefined {
        return this._on_stage
    }

    public set on_stage(value: string | undefined) {
        this._on_stage = value;
    }
    
    public get on_table(): string | undefined {
        return this._on_table
    }

    public set on_table(value: string | undefined) {
        this._on_table = value;
    }
    
    public get on_view(): string | undefined {
        return this._on_view
    }

    public set on_view(value: string | undefined) {
        this._on_view = value;
    }
    
    public get show_initial_rows(): boolean | undefined {
        return this._show_initial_rows
    }

    public set show_initial_rows(value: boolean | undefined) {
        this._show_initial_rows = value;
    }
    
}

