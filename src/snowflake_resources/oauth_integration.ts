/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/

import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";


export interface Oauth_IntegrationConfig extends TerraformMetaArguments {
    name: string;
    oauth_client: string;
    blocked_roles_list?: Set<string>;
    comment?: string;
    enabled?: boolean;
    oauth_client_type?: string;
    oauth_issue_refresh_tokens?: boolean;
    oauth_redirect_uri?: string;
    oauth_refresh_token_validity?: number;
    oauth_use_secondary_roles?: string;
}

export class Oauth_Integration extends TerraformResource {
    _name: string;
    _oauth_client: string;
    _blocked_roles_list?: Set<string>;
    _comment?: string;
    _enabled?: boolean;
    _oauth_client_type?: string;
    _oauth_issue_refresh_tokens?: boolean;
    _oauth_redirect_uri?: string;
    _oauth_refresh_token_validity?: number;
    _oauth_use_secondary_roles?: string;
    readonly _id: string;

    public constructor(scope: Construct, id: string, config: Oauth_IntegrationConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake_oauth_integration",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        
        this._name = config.name;
        
        this._oauth_client = config.oauth_client;
        
        this._blocked_roles_list = config.blocked_roles_list;
        
        this._comment = config.comment;
        
        this._enabled = config.enabled;
        
        this._oauth_client_type = config.oauth_client_type;
        
        this._oauth_issue_refresh_tokens = config.oauth_issue_refresh_tokens;
        
        this._oauth_redirect_uri = config.oauth_redirect_uri;
        
        this._oauth_refresh_token_validity = config.oauth_refresh_token_validity;
        
        this._oauth_use_secondary_roles = config.oauth_use_secondary_roles;
    }
    public getAttributes(): { [name: string]: any } {
        return {
            name: this._name,
            oauth_client: this._oauth_client,
            blocked_roles_list: this._blocked_roles_list,
            comment: this._comment,
            enabled: this._enabled,
            oauth_client_type: this._oauth_client_type,
            oauth_issue_refresh_tokens: this._oauth_issue_refresh_tokens,
            oauth_redirect_uri: this._oauth_redirect_uri,
            oauth_refresh_token_validity: this._oauth_refresh_token_validity,
            oauth_use_secondary_roles: this._oauth_use_secondary_roles,
        }
    }

    public get id(): string {
        return this._id;
    }

    public ref(attribute: string): string {
        return `\${snowflake_oauth_integration.${this.friendlyUniqueId}.${attribute}}`;
    }

    public get name(): string {
        return this._name
    }

    public set name(value: string) {
        this._name = value;
    }
    
    public get oauth_client(): string {
        return this._oauth_client
    }

    public set oauth_client(value: string) {
        this._oauth_client = value;
    }
    
    public get blocked_roles_list(): Set<string> | undefined {
        return this._blocked_roles_list
    }

    public set blocked_roles_list(value: Set<string> | undefined) {
        this._blocked_roles_list = value;
    }
    
    public get comment(): string | undefined {
        return this._comment
    }

    public set comment(value: string | undefined) {
        this._comment = value;
    }
    
    public get enabled(): boolean | undefined {
        return this._enabled
    }

    public set enabled(value: boolean | undefined) {
        this._enabled = value;
    }
    
    public get oauth_client_type(): string | undefined {
        return this._oauth_client_type
    }

    public set oauth_client_type(value: string | undefined) {
        this._oauth_client_type = value;
    }
    
    public get oauth_issue_refresh_tokens(): boolean | undefined {
        return this._oauth_issue_refresh_tokens
    }

    public set oauth_issue_refresh_tokens(value: boolean | undefined) {
        this._oauth_issue_refresh_tokens = value;
    }
    
    public get oauth_redirect_uri(): string | undefined {
        return this._oauth_redirect_uri
    }

    public set oauth_redirect_uri(value: string | undefined) {
        this._oauth_redirect_uri = value;
    }
    
    public get oauth_refresh_token_validity(): number | undefined {
        return this._oauth_refresh_token_validity
    }

    public set oauth_refresh_token_validity(value: number | undefined) {
        this._oauth_refresh_token_validity = value;
    }
    
    public get oauth_use_secondary_roles(): string | undefined {
        return this._oauth_use_secondary_roles
    }

    public set oauth_use_secondary_roles(value: string | undefined) {
        this._oauth_use_secondary_roles = value;
    }
    
}

