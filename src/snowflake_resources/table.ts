/*
DO NOT EDIT - Generated by tools/create_cdk_provider_files.js. Refer to the README for more info.
*/

import { TerraformMetaArguments, TerraformResource } from "cdktf";
import { Construct } from "constructs";

    export interface Table_Column {
        readonly name: string;
        readonly type: string;
        readonly comment?: string;
        readonly default?: {readonly constant?: string; readonly expression?: string; readonly sequence?: string; };
        readonly identity?: {readonly start_num?: number; readonly step_num?: number; };
        readonly masking_policy?: string;
        readonly nullable?: boolean;
    }
    export interface Table_Primary_Key {
        readonly keys: string[];
        readonly name?: string;
    }
    export interface Table_Tag {
        readonly name: string;
        readonly value: string;
        readonly database?: string;
        readonly schema?: string;
    }

export interface TableConfig extends TerraformMetaArguments {
    column: Table_Column[];
    database: string;
    name: string;
    schema: string;
    change_tracking?: boolean;
    cluster_by?: string[];
    comment?: string;
    data_retention_days?: number;
    data_retention_time_in_days?: number;
    primary_key?: Table_Primary_Key[];
    tag?: Table_Tag[];
}

export class Table extends TerraformResource {
    _column: Table_Column[];
    _database: string;
    _name: string;
    _schema: string;
    _change_tracking?: boolean;
    _cluster_by?: string[];
    _comment?: string;
    _data_retention_days?: number;
    _data_retention_time_in_days?: number;
    _primary_key?: Table_Primary_Key[];
    _tag?: Table_Tag[];
    readonly _id: string;

    public constructor(scope: Construct, id: string, config: TableConfig) {
        super(scope, id, {
            terraformResourceType: "snowflake_table",
            terraformGeneratorMetadata: {
                providerName: "snowflake"
            },
            provider: config.provider,
            dependsOn: config.dependsOn,
            count: config.count,
            lifecycle: config.lifecycle
        });
        this._id = id;
        
        this._column = config.column;
        
        this._database = config.database;
        
        this._name = config.name;
        
        this._schema = config.schema;
        
        this._change_tracking = config.change_tracking;
        
        this._cluster_by = config.cluster_by;
        
        this._comment = config.comment;
        
        this._data_retention_days = config.data_retention_days;
        
        this._data_retention_time_in_days = config.data_retention_time_in_days;
        
        this._primary_key = config.primary_key;
        
        this._tag = config.tag;
    }
    public getAttributes(): { [name: string]: any } {
        return {
            column: this._column,
            database: this._database,
            name: this._name,
            schema: this._schema,
            change_tracking: this._change_tracking,
            cluster_by: this._cluster_by,
            comment: this._comment,
            data_retention_days: this._data_retention_days,
            data_retention_time_in_days: this._data_retention_time_in_days,
            primary_key: this._primary_key,
            tag: this._tag,
        }
    }

    public get id(): string {
        return this._id;
    }

    public ref(attribute: string): string {
        return `\${snowflake_table.${this.friendlyUniqueId}.${attribute}}`;
    }

    public get column(): Table_Column[] {
        return this._column
    }

    public set column(value: Table_Column[]) {
        this._column = value;
    }
    
    public get database(): string {
        return this._database
    }

    public set database(value: string) {
        this._database = value;
    }
    
    public get name(): string {
        return this._name
    }

    public set name(value: string) {
        this._name = value;
    }
    
    public get schema(): string {
        return this._schema
    }

    public set schema(value: string) {
        this._schema = value;
    }
    
    public get change_tracking(): boolean | undefined {
        return this._change_tracking
    }

    public set change_tracking(value: boolean | undefined) {
        this._change_tracking = value;
    }
    
    public get cluster_by(): string[] | undefined {
        return this._cluster_by
    }

    public set cluster_by(value: string[] | undefined) {
        this._cluster_by = value;
    }
    
    public get comment(): string | undefined {
        return this._comment
    }

    public set comment(value: string | undefined) {
        this._comment = value;
    }
    
    public get data_retention_days(): number | undefined {
        return this._data_retention_days
    }

    public set data_retention_days(value: number | undefined) {
        this._data_retention_days = value;
    }
    
    public get data_retention_time_in_days(): number | undefined {
        return this._data_retention_time_in_days
    }

    public set data_retention_time_in_days(value: number | undefined) {
        this._data_retention_time_in_days = value;
    }
    
    public get primary_key(): Table_Primary_Key[] | undefined {
        return this._primary_key
    }

    public set primary_key(value: Table_Primary_Key[] | undefined) {
        this._primary_key = value;
    }
    
    public get tag(): Table_Tag[] | undefined {
        return this._tag
    }

    public set tag(value: Table_Tag[] | undefined) {
        this._tag = value;
    }
    
}

